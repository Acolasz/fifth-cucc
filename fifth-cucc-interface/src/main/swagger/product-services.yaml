openapi: 3.0.0
info:
  version: 1.0.0
  title: Fifth Cucc Services v2
  description: Fifth Cucc Services v2

#security:
#  - bearerAuth: []

healthcheck:
  get:
    tags:
      - 'HealthCheckService'
    operationId: healthCheck
    description: 'Health Check'
    responses:
      200:
        description: 'Success'

productAll:
  get:
    tags:
      - 'ProductService'
    operationId: getProducts
    description: 'All Products'
    responses:
      200:
        description: 'Success'
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Product'
      500:
        description: 'Internal server error'

productId:
  get:
    tags:
      - 'ProductService'
    operationId: getProductId
    description: 'return a Product by id'
    produces:
      - application/json
    parameters:
      - name: id
        in: path
        description: 'Id of Product to return'
        required: true
        schema:
          type: integer
    responses:
      200:
        description: 'Success'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      500:
        description: 'Internal server error'
  put:
    tags:
      - 'ProductService'
    description: 'Update Product'
    operationId: updateProductId
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: path
        name: id
        description: 'Id of product to return'
        required: true
        schema:
          type: integer
    requestBody:
      $ref: '#/components/requestBodies/ProductBody'
    responses:
      200:
        description: Success
        headers:
          signature:
            type: string
            description: 'Service message'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      500:
        description: 'Internal server error'
  delete:
    tags:
      - 'ProductService'
    operationId: deleteProductById
    description: 'delete a product by id'
    parameters:
#      - in: header
#        name: Authorization
#        required: true
#        schema:
#          type: string
      - in: path
        name: id
        description: 'Id of Product to return'
        required: true
        schema:
          type: integer
    responses:
      200:
        description: 'Success'
      400:
        description: 'Invalid ID supplied'
      404:
        description: 'Product not found'

product:
  post:
    tags:
      - 'ProductService'
    description: 'Add a new product to the store'
    operationId: createProduct
    consumes:
      - application/json
    produces:
      - application/json
    requestBody:
      $ref: '#/components/requestBodies/ProductBody'
    responses:
      200:
        description: "Success"
        headers:
          signature:
            type: string
            description: 'Service message'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'

      405:
        description: 'Invalid input'
      500:
        description: 'Internal server error'

productRateById:
  put:
    tags:
      - 'ProductService'
    description: 'Update Product Rate'
    operationId: updateProductRateById
    consumes:
      - application/json
    produces:
      - application/json
    parameters:
      - in: path
        name: id
        description: 'Id of product to return'
        required: true
        schema:
          type: integer
    requestBody:
      $ref: '#/components/requestBodies/RateBody'
    responses:
      200:
        description: Success
        headers:
          signature:
            type: string
            description: 'Service message'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      500:
        description: 'Internal server error'

product1:
  get:
    tags:
      - 'ProductService'
    operationId: getProduct1
    description: 'Product 1 id'
    produces:
      - application/json
    responses:
      200:
        description: 'Success'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      500:
        description: 'Internal server error'

components:
  schemas:
    Product:
      description: 'Product model'
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        rate:
          type: integer

    Rate:
      description: 'RateObject for Product model'
      properties:
        rate:
          type: integer
      required:
        - rate

  requestBodies:
    ProductBody:
      description: A JSON object containing Product information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    RateBody:
      description: A JSON object containing Product information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rate'

